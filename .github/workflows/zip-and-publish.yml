name: Zip And Publish

on:
  create:
    tags:
      - '**'
  schedule:
    - cron: 0 3 * * * # Daily 3 a.m.
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release Version'
        type: string
        required: true
        
env:
  RELEASE_VERSION: ${{ github.event.inputs.release-version || github.ref_name }}
        
jobs:
  zip-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Create Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag -a ${{ github.event.inputs.release-version }} -m "Add tag ${{ github.event.inputs.release-version }}"
          git push origin --tags
      - name: Checkout Templates
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: adaptris/interlok-templates
          path: interlok-templates
      - name: Zip base-filesystem-no-templates
        run: |
          cd ./base-filesystem && zip -r base-filesystem-no-templates.zip . -x *.zip
      - name: Copy Templates
        # Copy the templates to the base-filesystem dir but ignoring git files
        run: |
          mkdir ./base-filesystem/ui-resources/config-templates/
          cp -rv `for f in ./interlok-templates/*;do echo "$f" | grep -vE "README.md|.whitesource|.git";done;` ./base-filesystem/ui-resources/config-templates/
      - name: Zip base-filesystem
        run: |
          cd ./base-filesystem && zip -r base-filesystem.zip . -x *.zip
      - name: Create Release
        if: github.event_name != 'schedule'
        run: |
          cd ./base-filesystem && gh release create ${{ env.RELEASE_VERSION }} './base-filesystem-no-templates.zip' './base-filesystem.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Nightly Release
        if: github.event_name == 'schedule'
        run: |
          cd ./base-filesystem && gh release upload nightly './base-filesystem.zip' --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 #     - name: Publish to nexus
 #       run: |
 #         curl -v -F r=releases -F hasPom=false -F g=com.adaptris -F a=base-filesystem -F v=1.0.0 -F p=zip -F file=@./base-filesystem.zip -u deployment:${{ secrets.NEXUS_REPO_PASSWORD }} https://nexus.adaptris.net/nexus/service/local/artifact/maven/content
